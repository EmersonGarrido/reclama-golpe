module.exports = {
  apps: [
    {
      // API Backend (NestJS)
      name: 'reclamagolpe-api',
      script: 'dist/main.js',
      cwd: './apps/api',
      instances: 'max', // Use all CPU cores
      exec_mode: 'cluster',
      
      // Environment variables
      env: {
        NODE_ENV: 'production',
        PORT: 3333
      },
      
      // Memory management
      max_memory_restart: '1G',
      
      // Logging
      error_file: '/var/log/reclamagolpe/api-error.log',
      out_file: '/var/log/reclamagolpe/api-out.log',
      log_file: '/var/log/reclamagolpe/api-combined.log',
      time: true,
      
      // Restart policies
      min_uptime: '10s',
      max_restarts: 10,
      autorestart: true,
      
      // Graceful shutdown
      kill_timeout: 5000,
      wait_ready: true,
      listen_timeout: 3000,
      
      // Watch (disable in production)
      watch: false,
      ignore_watch: ['node_modules', 'uploads', '.git', 'logs'],
      
      // Node.js arguments
      node_args: '--max-old-space-size=2048',
      
      // Monitoring
      instance_var: 'INSTANCE_ID',
      merge_logs: true,
      
      // Health check
      health_check: {
        interval: 30,
        retries: 3,
        endpoint: '/health'
      }
    },
    {
      // Web Frontend (Next.js)
      name: 'reclamagolpe-web',
      script: 'yarn',
      args: 'start',
      cwd: './apps/web',
      instances: 1,
      exec_mode: 'fork',
      
      // Environment variables
      env: {
        NODE_ENV: 'production',
        PORT: 3000
      },
      
      // Memory management
      max_memory_restart: '1G',
      
      // Logging
      error_file: '/var/log/reclamagolpe/web-error.log',
      out_file: '/var/log/reclamagolpe/web-out.log',
      log_file: '/var/log/reclamagolpe/web-combined.log',
      time: true,
      
      // Restart policies
      min_uptime: '10s',
      max_restarts: 10,
      autorestart: true,
      
      // Graceful shutdown
      kill_timeout: 5000,
      
      // Watch (disable in production)
      watch: false,
      
      // Node.js arguments
      node_args: '--max-old-space-size=2048',
      
      // Monitoring
      merge_logs: true
    },
    {
      // Optional: Background Jobs Worker
      name: 'reclamagolpe-worker',
      script: 'dist/worker.js',
      cwd: './apps/api',
      instances: 1,
      exec_mode: 'fork',
      
      // Only start if worker exists
      // Comment out or remove if not using background jobs
      enabled: false,
      
      env: {
        NODE_ENV: 'production',
        WORKER: 'true'
      },
      
      // Memory management
      max_memory_restart: '512M',
      
      // Logging
      error_file: '/var/log/reclamagolpe/worker-error.log',
      out_file: '/var/log/reclamagolpe/worker-out.log',
      log_file: '/var/log/reclamagolpe/worker-combined.log',
      time: true,
      
      // Restart policies
      min_uptime: '10s',
      max_restarts: 10,
      autorestart: true,
      
      // Cron restart (daily at 3 AM)
      cron_restart: '0 3 * * *'
    }
  ],
  
  // Deploy configuration (optional)
  deploy: {
    production: {
      user: 'ubuntu',
      host: 'your-server-ip',
      ref: 'origin/main',
      repo: 'https://github.com/EmersonGarrido/reclama-golpe.git',
      path: '/var/www/reclamagolpe',
      'pre-deploy': 'git fetch --all',
      'post-deploy': 'yarn install && yarn build && pm2 reload ecosystem.config.js --env production',
      'pre-setup': 'apt-get update'
    }
  }
}